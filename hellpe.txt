
  Future<void> getallsongs() async {
    allSongs.clear();
    // CollectionReference usersCollection =
    //     FirebaseFirestore.instance.collection('users');
    // QuerySnapshot usersSnapshot = await usersCollection.get();

    // for (QueryDocumentSnapshot userDoc in usersSnapshot.docs) {
    //   String userId = userDoc.id;

    //   CollectionReference playlistCollection = FirebaseFirestore.instance
    //       .collection('users')
    //       .doc(userId)
    //       .collection('playlist');
    //   QuerySnapshot playlistSnapshot = await playlistCollection.get();

    //   for (QueryDocumentSnapshot playlistDoc in playlistSnapshot.docs) {
    //     dynamic playlistData = playlistDoc.data();
    //     String songLink = playlistData['songlink'];
    //     String thumbnailLink = playlistData['thumbnaillink'];
    //     String userId = playlistData['userId'];
    //     String songname = playlistData['songname'];
    //     allSongs.add([songLink, thumbnailLink, userId, songname]);
    //     setState(() {});
    //   }
    // }

  //   void saveTodbOfAllSongs(String a, String b, String c) async {
  //   final CollectionReference songlistsRef =
  //       FirebaseFirestore.instance.collection('songlists');
  //   final user = Aoth().getuser();
  //   final newDocRef = songlistsRef.doc();
  //   await newDocRef.set({
  //     'songname': c,
  //     'songlink': a,
  //     'thumbnaillink': b,
  //     'userId': user.uid,
  //   });
  //   // print('Values stored in Firestore');
  // }

    CollectionReference songsCollection = FirebaseFirestore.instance.collection('allsongs');s
  }
